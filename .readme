#Mini assessment
##Structure of the project

This project was started by beeing developed locally, then tested on docker containers and lastly deployed on AWS.

-Django credentials:  user: user123 password: Adivinha12345

-Created a postgres SQL database on AWS RDS and deployed the django application usign AWS ECS acessible at: http://13.60.227.6:8000/admin (user: user123 password: Adivinha12345)
-For other APIs like checking the conversations simulated using the python script check: http://13.60.227.6:8000/api/conversations/ or http://13.60.227.6:8000/api/conversations/get_vegeterians/ to get vegetarian/vegan in those 100 simulated conversations.

###ChatBotApp
On the chatBotApp folder you will encounter the .py scrpipt. Run in on terminal using python chatbot.py, and you will have a menu with 3 choices:
-Task3(chatbot that asks the user what their 3 favourite foods are)
-Task4(Simulate 100 conversations between two Chatgpt instances)
-Task5(Test the Protected API that retrives users that are vegetarian/vegan in those 100 simulated conversations)(user: user123 password: Adivinha12345)

###django

On this django folder you will find my django app. You will find the basic code I used to acomplish the tasks you gave me. Conected my django to my postgrest database which contains a table that is used to store all the simulated conversation through a POST endpoint. 

Two auxiliary endpoints were created. One for deleting the old lines of the database when one new conversation is iniated, so only the current conversation is stored. The other endpoint is the 'conversations/get_vegeterians/' that retrives from the database the only vegeterians answers from the last conversation.

##Test this application locally

###Locally(This will use deployed database, only django is local)
- Start by changing the API url in /chatbot.py script on the first lines of the .py. Go into /django and run python manage.py runserver(migrations and superuser already set in the database). If you wish to use secrets from .env go into /django/chabot settings and uncomment the .env variables use. This will be accessible at "http://127.0.0.1:8000/admin".

###Docker(This will use deployed database, only django is local)
-Start by changing the API url in /chatbot.py script on the first lines of the .py. In project root run docker-compose up -d(migrations and superuser already set in the database), this will launch the django app on docker container accesible at "http://127.0.0.1:8000/admin". If want to inject env variables instead of backing them into the image, comment the variable and pass them threw .env or in docker-compose.yml.








